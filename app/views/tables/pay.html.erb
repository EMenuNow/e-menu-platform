<% content_for :js do %>


<script type="text/javascript">


	$(function(){

    ITEMS = []
    PRICE = 0





	
  var stripe = Stripe('pk_test_WK72bUcdjoVsncoNFQGrFkcv');
  var elements = stripe.elements();
  







  // Custom styling can be passed to options when creating an Element.
  // (Note that this demo uses a wider set of styles than the guide below.)
  var style = {
    base: {
      color: '#32325d',
      // lineHeight: '18px',
      fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
      fontSmoothing: 'antialiased',
      fontSize: '16px',
      '::placeholder': {
        color: '#aab7c4'
      }
    },
    invalid: {
      color: '#fa755a',
      iconColor: '#fa755a'
    }
  };

  // Create an instance of the card Element.
  var card = elements.create('card', {style: style});

  // Add an instance of the card Element into the `card-element` <div>.
  card.mount('#card-element');

  // Handle real-time validation errors from the card Element.
  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
      $('#card-errors').removeClass("invisible");
      $("#please-wait").addClass("invisible");
      $("#main-payment-form").removeClass("invisible");
    } else {
      displayError.textContent = '';
      $('#card-errors').addClass("invisible");

    }
  });

  // Handle form submission.
  var form = document.getElementById('payment-form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error.
        var errorElement = document.getElementById('card-errors');
         errorElement.textContent = result.error.message;
         $('#card-errors').removeClass("invisible")
         $("#please-wait").addClass("invisible");
         $("#main-payment-form").removeClass("invisible");
      } else {
        // Send the token to your server.
        stripeTokenHandler(result.token);
      }
    });
  });

  // Submit the form with the token ID.
  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('payment-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    // Submit the form
    form.submit();
  }


  $('#payment-form').submit(function() {      
     $("#please-wait").removeClass("invisible");
     $("#main-payment-form").addClass("invisible");
  });

  $("#checkout-button").click(function(){
    $('#checkout-button').addClass("invisible");
    $('#checkout').removeClass("invisible");



// Stripe AP


  // apple pay
  var paymentRequest = stripe.paymentRequest({
    country: 'GB',
    currency: 'gbp',
    total: {
      label: 'e-me.nu payment',
      amount: parseInt($("#price").val()),
    },
    requestPayerName: true,
    requestPayerEmail: true,
  });
  var prButton = elements.create('paymentRequestButton', {
    paymentRequest: paymentRequest,
  });
  paymentRequest.on('token', function(ev) {
    // Send the token to your server to charge it!
    fetch('/tables/<%=@table.id%>/stripe.json', {
      method: 'POST',
      body: JSON.stringify({token: ev.token.id}),
      headers: {'content-type': 'application/json'},
    })
    .then(function(response) {
      if (response.ok) {
        console.log(response)
        // Report to the browser that the payment was successful, prompting
        // it to close the browser payment interface.
        ev.complete('success');
      } else {
        // Report to the browser that the payment failed, prompting it to
        // re-show the payment interface, or show an error message and close
        // the payment interface.
            console.log(response)
        ev.complete('fail');
      }
    });
  });
  // Check the availability of the Payment Request API first.
  paymentRequest.canMakePayment().then(function(result) {
    if (result) {
      prButton.mount('#payment-request-button');
    } else {
      document.getElementById('payment-request-button').style.display = 'none';
    }
  });




// Finish stripe AP






  });

  $("#select-all").click(function(){
    $(".item-check").prop('checked', true);
      PRICE=0
    $.each( $(".item-check"), function( key, value ) {
      ITEMS.push($(this).val())
      PRICE = PRICE + parseInt($(this).data("price"))
    });
    $('#checkout-button').removeClass("invisible");
    update_display()
    return false;
  });

  $("#deselect-all").click(function(){
    $(".item-check").prop('checked', false);
    ITEMS = []
    PRICE = 0
    $('#checkout-button').addClass("invisible");
    update_display()
    return false;
  });

  function update_display(){
      $("#items").val(ITEMS)
      $("#price").val(PRICE)
      $(".display-price").html("£" + (PRICE/100))
  }

  $(".item-check").click(function() {
    if ($(this).is(':checked')) {
      ITEMS.push($(this).val())
      PRICE = PRICE + parseInt($(this).data("price"))
      update_display()
    } else {
      for( var i = 0; i < ITEMS.length; i++){ 
        if ( ITEMS[i] === $(this).val()) {
          ITEMS.splice(i, 1); 
        }
      }
      PRICE = PRICE - parseInt($(this).data("price"))
      update_display()
    }
    if (PRICE == 0){
     $('#checkout-button').addClass("invisible");
    } else {
     $('#checkout-button').removeClass("invisible");
    }
  });



});


</script>

<% end %>



  <div class="jumbotron jumbotron-fluid hero-main-pay-background mb-0">
    <div class="container">
      <h2 class="display-2 text-center text-light">Settle Up!!!</h2>
      <p class=" text-center ">
      </p>
    </div>
  </div>


<div class="container-fluid mb-0">
	<div class="row">
			<div class="col-lg-6 bg-secondary ">
				
				<div class="row text-white pt-3 pb-3">
					<div class="col text-center">
						<span>Current Bill </span><br>
						<span class="current-bill">

	<% price = @table.table_items.reject{|a| a.paid}.map{|e| e.price_a}.inject(:+) || 0 %>
							<%=number_to_currency price, unit: "£"%>								

							</span>
					</div>
				</div>

				<div class="row pt-3 pb-3">
					<div class="col">
            <%= link_to "Select All", "#", class: "btn btn-outline-warning mb-2 btn-sm", id: "select-all"%> 
            <%= link_to "Deselect all", "#", class: "btn btn-outline-warning mb-2 btn-sm", id: "deselect-all"%>
						<ul class="list-group">
							<% @table.table_items.order(:created_at).each do |item| %>
							  <li class="list-group-item d-flex justify-content-between align-items-center rhc-item  <%=item.paid ? "item-paid" : "" %>">
								  <div class="container">
								  	<div class="row ">
								  		<div class="col-sm-1 "><%= check_box_tag( :item, item.id, false, class: "item-check form-check-input", "data-price" => item.price_a*100) unless item.paid  %></div>
								  		<div class="col-sm-5"><%= item.name%></div>
								  		<div class="col-sm-4 text-right"><%= item.for%></div>
								  		<div class="col-sm-2 text-right"><%=number_to_currency item.price_a, unit: "£"%></div>
								  	</div>
								  </div>
							  </li>
						  <% end %>
						</ul>
					</div>
				</div>

			</div>
			<div class="col-lg-6 wrapper pt-5 text-center bg-dark text-light px-5">




<% if price != 0 %>
      <% if alert.present? %>
        <div class="alert alert-danger show m-0 mt-2" role="alert">
          <%= alert %>
        </div>
      <% end %>
      <% if notice.present? %>
        <div class="alert alert-success show m-0 mt-2" role="alert">
          <%= notice %>
        </div>
      <% end %>

  <h2><%= label_tag :Total%> <span class="display-price">£0.00</span></h2>
<script src="https://js.stripe.com/v3/"></script>
<p class="mt-3">
  <i>Please choose the items that you will be paying for. "select all" if you are paying the whole bill.</i>
</p>

<%=link_to "CHECKOUT", "#", class: "btn btn-warning btn-block mt-2 invisible", id: "checkout-button"%>



<div class="container invisible " id="checkout">
  <div class="row">
    <div class="col bg-light m-5">



      <div id="please-wait" class="invisible">
        <h3 class="text-dark">Please Wait</h3>
        <div class="progress">
          <div class="progress-bar progress-bar-striped  progress-bar-animated bg-warning" role="progressbar" style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
      </div>
      <div id='main-payment-form'>
        <div id="payment-request-button">
          <!-- A Stripe Element will be inserted here. -->
        </div>
        <br>
        <hr>
        <form action="/tables/<%=@table.id%>/stripe" method="post" id="payment-form">
        	<%= hidden_field_tag :price, nil %>
        	<%= hidden_field_tag :items, nil%>
           <div id="card-errors" class='alert alert-danger invisible' role="alert"></div>
          <div class="form-row bg-light border">
            <label for="card-element">
              <!-- Credit or debit card -->
            </label>
            <div id="card-element">
              <!-- A Stripe Element will be inserted here. -->
            </div>
            <!-- Used to display form errors. -->
           
          </div>
          <button class="btn btn-warning mt-2 submit-payment mb-3">Submit Payment</button>
         
        </form>

      </div>

      
    </div>
  </div>
</div>

 <%=link_to "Not Finished?", table_path(@table), class: "btn btn-secondary  mt-2  mb-3 "%>

<% else %>


	<h1>Thank you for your business!!!!</h1>
	<%=link_to "Close Table", table_finish_path(@table), class: "btn btn-warning  mt-2 "%>
	<%=link_to "Not Finished?", table_path(@table), class: "btn btn-secondary  mt-2 "%>

<% end %>

			</div>
	</div>






</div>


  <div class="jumbotron jumbotron-fluid hero-main-pay-background mb-0">

  </div>



    	  

